from typing import Mapping, Any, Iterable, Optional

from hdm.types.entity import Entity

ResultMapping = Mapping[str, Any]


class Storage:
    def add_table(self, tablename: str, primary_key: Iterable[str], fields: Iterable[str]): ...
    def setup(self): ...
    def delete(self, entity: Entity) -> Entity: ...

    def find_one(self, tablename: str, criteria: dict) -> Optional[ResultMapping]: ...
    def find_many(self, tablename: str, criteria: dict, *, limit=None, offset=None) -> Iterable[ResultMapping]: ...
    def insert(self, tablename: str, values: dict) -> ResultMapping: ...
    def update(self, tablename: str, identity: dict, values: dict) -> None: ...
